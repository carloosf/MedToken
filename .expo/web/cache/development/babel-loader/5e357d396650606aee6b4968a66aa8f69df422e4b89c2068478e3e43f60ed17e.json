{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { useNavigation, CommonActions } from '@react-navigation/native';\nimport { useFonts, Oswald_400Regular } from '@expo-google-fonts/oswald';\nimport ModalDropdown from 'react-native-modal-dropdown';\nimport Button from \"../components/Button\";\nimport StylesTokenForms from \"../styles/Styles.TokenForms\";\nimport HandlerToken from \"../handlers/handlerToken\";\nimport Data from \"../handlers/dataAtual\";\nimport AddToken from \"../handlers/AddToken\";\nimport handlerPrioridade from \"../handlers/handlerPrioridade\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StylesTokenForms;\nexport default function TokenForms() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var dropdownOptions = ['Preferencial', 'Geral', 'Exame'];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    nome = _useState4[0],\n    setNome = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    tipoToken = _useState6[0],\n    setTipoToken = _useState6[1];\n  var navigation = useNavigation();\n  var dados = {\n    token: HandlerToken(tipoToken),\n    name: nome,\n    date: Data(true),\n    prioridade: handlerPrioridade(tipoToken)\n  };\n  var handlerButton = function () {\n    var _ref = _asyncToGenerator(function* () {\n      setIsLoading(true);\n      console.log(JSON.stringify(dados));\n      try {\n        var data = yield AddToken({\n          dados: dados\n        });\n        console.log('Response:', data);\n        if (data.status === '201') {\n          navigation.dispatch(CommonActions.reset({\n            index: 0,\n            routes: [{\n              name: 'Home'\n            }]\n          }));\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n      setTimeout(function () {\n        setIsLoading(false);\n      }, 1000);\n    });\n    return function handlerButton() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleNameChange = function handleNameChange(text) {\n    setNome(text);\n  };\n  var handleDropdownSelect = function handleDropdownSelect(index, value) {\n    setTipoToken(value);\n  };\n  var _useFonts = useFonts({\n      Oswald_400Regular: Oswald_400Regular\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontLoaded = _useFonts2[0];\n  if (!fontLoaded) {\n    return null;\n  } else {\n    return _jsxs(SafeAreaView, {\n      style: styles.container,\n      children: [_jsx(StatusBar, {\n        backgroundColor: \"#293645\"\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \" Solicita\\xE7\\xE3o de Token \"\n      }), _jsxs(KeyboardAvoidingView, {\n        behavior: \"padding\",\n        children: [_jsxs(View, {\n          style: styles.form,\n          children: [_jsxs(View, {\n            children: [_jsx(Text, {\n              style: styles.label,\n              children: \"Nome:\"\n            }), _jsx(TextInput, {\n              style: [styles.input],\n              placeholderTextColor: \"#7E998D\",\n              autoComplete: \"name\",\n              autoCapitalize: \"words\",\n              placeholder: \"Digite seu nome aqui\",\n              onChangeText: handleNameChange\n            })]\n          }), _jsxs(View, {\n            children: [_jsx(Text, {\n              style: styles.label,\n              children: \"Op\\xE7\\xE3o de Atendimento:\"\n            }), _jsx(ModalDropdown, {\n              options: dropdownOptions,\n              defaultValue: \"Selecione uma op\\xE7\\xE3o...\",\n              style: [styles.input],\n              textStyle: styles.dropdownText,\n              dropdownStyle: styles.dropdownContainer,\n              dropdownTextStyle: styles.dropdownItemText,\n              onSelect: handleDropdownSelect\n            })]\n          }), _jsx(Button, {\n            isLoading: loading,\n            onPress: handlerButton\n          })]\n        }), _jsx(Image, {\n          source: require(\"../../assets/images/logo-ofc.png\"),\n          style: styles.logo\n        })]\n      })]\n    });\n  }\n}","map":{"version":3,"names":["React","useState","View","TextInput","Image","Text","SafeAreaView","StatusBar","KeyboardAvoidingView","useNavigation","CommonActions","useFonts","Oswald_400Regular","ModalDropdown","Button","StylesTokenForms","HandlerToken","Data","AddToken","handlerPrioridade","jsx","_jsx","jsxs","_jsxs","styles","TokenForms","_useState","_useState2","_slicedToArray","loading","setIsLoading","dropdownOptions","_useState3","_useState4","nome","setNome","_useState5","_useState6","tipoToken","setTipoToken","navigation","dados","token","name","date","prioridade","handlerButton","_ref","_asyncToGenerator","console","log","JSON","stringify","data","status","dispatch","reset","index","routes","error","setTimeout","apply","arguments","handleNameChange","text","handleDropdownSelect","value","_useFonts","_useFonts2","fontLoaded","style","container","children","backgroundColor","title","behavior","form","label","input","placeholderTextColor","autoComplete","autoCapitalize","placeholder","onChangeText","options","defaultValue","textStyle","dropdownText","dropdownStyle","dropdownContainer","dropdownTextStyle","dropdownItemText","onSelect","isLoading","onPress","source","require","logo"],"sources":["D:/Github/MedToken/src/pages/TokenForms.tsx"],"sourcesContent":["/* eslint-disable camelcase */\r\n/* eslint-disable jsx-a11y/alt-text */\r\n\r\n// Dependencias\r\nimport React, { useState } from 'react'\r\nimport {\r\n  View,\r\n  TextInput,\r\n  Image,\r\n  Text,\r\n  SafeAreaView,\r\n  StatusBar,\r\n  KeyboardAvoidingView,\r\n} from 'react-native'\r\nimport { useNavigation, CommonActions } from '@react-navigation/native'\r\nimport { useFonts, Oswald_400Regular } from '@expo-google-fonts/oswald'\r\nimport ModalDropdown from 'react-native-modal-dropdown'\r\n\r\n// Componentes\r\nimport Button from '../components/Button'\r\nimport StylesTokenForms from '../styles/Styles.TokenForms'\r\n\r\n// Handlers\r\nimport HandlerToken from '../handlers/handlerToken'\r\nimport Data from '../handlers/dataAtual'\r\nimport AddToken from '../handlers/AddToken'\r\nimport handlerPrioridade from '../handlers/handlerPrioridade'\r\nconst styles = StylesTokenForms\r\n\r\nexport default function TokenForms() {\r\n  const [loading, setIsLoading] = useState(false)\r\n  const dropdownOptions = ['Preferencial', 'Geral', 'Exame']\r\n\r\n  const [nome, setNome] = useState('')\r\n  const [tipoToken, setTipoToken] = useState('')\r\n\r\n  const navigation = useNavigation()\r\n  const dados = {\r\n    token: HandlerToken(tipoToken),\r\n    name: nome,\r\n    date: Data(true),\r\n    prioridade: handlerPrioridade(tipoToken),\r\n  }\r\n\r\n  const handlerButton = async function () {\r\n    setIsLoading(true)\r\n    console.log(JSON.stringify(dados))\r\n    try {\r\n      const data = await AddToken({ dados })\r\n      console.log('Response:', data)\r\n      if (data.status === '201') {\r\n        navigation.dispatch(\r\n          CommonActions.reset({\r\n            index: 0,\r\n            routes: [{ name: 'Home' }],\r\n          }),\r\n        )\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error)\r\n    }\r\n    setTimeout(() => {\r\n      setIsLoading(false)\r\n    }, 1000)\r\n  }\r\n\r\n  const handleNameChange = (text) => {\r\n    setNome(text)\r\n  }\r\n  const handleDropdownSelect = (index, value) => {\r\n    setTipoToken(value)\r\n  }\r\n\r\n  const [fontLoaded] = useFonts({\r\n    Oswald_400Regular,\r\n  })\r\n  if (!fontLoaded) {\r\n    return null\r\n  } else {\r\n    return (\r\n      <SafeAreaView style={styles.container}>\r\n        <StatusBar backgroundColor=\"#293645\" />\r\n        <Text style={styles.title}> Solicitação de Token </Text>\r\n        <KeyboardAvoidingView behavior=\"padding\">\r\n          <View style={styles.form}>\r\n            <View>\r\n              <Text style={styles.label}>Nome:</Text>\r\n              <TextInput\r\n                style={[styles.input]}\r\n                placeholderTextColor=\"#7E998D\"\r\n                autoComplete=\"name\"\r\n                autoCapitalize=\"words\"\r\n                placeholder=\"Digite seu nome aqui\"\r\n                onChangeText={handleNameChange}\r\n              />\r\n            </View>\r\n            <View>\r\n              <Text style={styles.label}>Opção de Atendimento:</Text>\r\n              <ModalDropdown\r\n                options={dropdownOptions}\r\n                defaultValue=\"Selecione uma opção...\"\r\n                style={[styles.input]}\r\n                textStyle={styles.dropdownText}\r\n                dropdownStyle={styles.dropdownContainer}\r\n                dropdownTextStyle={styles.dropdownItemText}\r\n                onSelect={handleDropdownSelect}\r\n              />\r\n            </View>\r\n            <Button isLoading={loading} onPress={handlerButton} />\r\n          </View>\r\n          <Image\r\n            source={require('../../assets/images/logo-ofc.png')}\r\n            style={styles.logo}\r\n          />\r\n        </KeyboardAvoidingView>\r\n      </SafeAreaView>\r\n    )\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}