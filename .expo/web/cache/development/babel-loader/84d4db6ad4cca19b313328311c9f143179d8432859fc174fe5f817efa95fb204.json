{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Token from \"../components/Token\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useFonts, Oswald_400Regular } from '@expo-google-fonts/oswald';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Home(_ref) {\n  var children = _ref.children;\n  var _useFonts = useFonts({\n      Oswald_400Regular: Oswald_400Regular\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontLoaded = _useFonts2[0];\n  if (!fontLoaded) {\n    return null;\n  } else {\n    return _jsxs(View, {\n      children: [_jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Image, {\n          source: require(\"../../assets/images/logo-ofc.png\")\n        }), _jsx(Token, {\n          idToken: \"teste\",\n          color: \"black\"\n        })]\n      }), _jsxs(View, {\n        style: styles.historico,\n        children: [_jsx(Text, {\n          style: styles.textHistorico,\n          children: \"Hist\\xF3rico de Solicita\\xE7\\xF5es\"\n        }), _jsx(Token, {\n          idToken: \"teste\",\n          color: \"black\"\n        }), _jsx(Token, {\n          idToken: \"teste\",\n          color: \"black\"\n        }), _jsx(Token, {\n          idToken: \"teste\",\n          color: \"black\"\n        }), _jsx(Token, {\n          idToken: \"teste\",\n          color: \"black\"\n        }), _jsx(Token, {\n          idToken: \"teste\",\n          color: \"black\"\n        })]\n      })]\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    borderBottomColor: '#fff',\n    borderBottomWidth: 2,\n    padding: 50\n  },\n  historico: {\n    padding: 50,\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    height: 450\n  },\n  textHistorico: {\n    color: '#fff',\n    fontSize: 20\n  }\n});","map":{"version":3,"names":["React","Token","Text","StyleSheet","View","Image","useFonts","Oswald_400Regular","jsx","_jsx","jsxs","_jsxs","Home","_ref","children","_useFonts","_useFonts2","_slicedToArray","fontLoaded","style","styles","container","source","require","idToken","color","historico","textHistorico","create","borderBottomColor","borderBottomWidth","padding","justifyContent","alignItems","height","fontSize"],"sources":["D:/Github/MedToken/src/pages/Home.tsx"],"sourcesContent":["/* eslint-disable camelcase */\r\n/* eslint-disable jsx-a11y/alt-text */\r\nimport React from 'react'\r\nimport Token from '../components/Token'\r\nimport { Text, StyleSheet, View, Image } from 'react-native'\r\nimport { useFonts, Oswald_400Regular } from '@expo-google-fonts/oswald'\r\n\r\ninterface HomeProps {\r\n  children: React.ReactNode\r\n}\r\n\r\nexport default function Home({ children }: HomeProps) {\r\n  const [fontLoaded] = useFonts({\r\n    Oswald_400Regular,\r\n  })\r\n  if (!fontLoaded) {\r\n    return null\r\n  } else {\r\n    return (\r\n      <View>\r\n        <View style={styles.container}>\r\n          <Image source={require('../../assets/images/logo-ofc.png')} />\r\n          <Token idToken=\"teste\" color=\"black\" />\r\n        </View>\r\n        <View style={styles.historico}>\r\n          <Text style={styles.textHistorico}>Histórico de Solicitações</Text>\r\n          <Token idToken=\"teste\" color=\"black\" />\r\n          <Token idToken=\"teste\" color=\"black\" />\r\n          <Token idToken=\"teste\" color=\"black\" />\r\n          <Token idToken=\"teste\" color=\"black\" />\r\n          <Token idToken=\"teste\" color=\"black\" />\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    borderBottomColor: '#fff',\r\n    borderBottomWidth: 2,\r\n    padding: 50,\r\n  },\r\n  historico: {\r\n    padding: 50,\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n    height: 450,\r\n  },\r\n  textHistorico: {\r\n    color: '#fff',\r\n    fontSize: 20,\r\n  },\r\n})\r\n"],"mappings":";AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK;AAA2B,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAEvC,SAASC,QAAQ,EAAEC,iBAAiB,QAAQ,2BAA2B;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAMvE,eAAe,SAASC,IAAIA,CAAAC,IAAA,EAA0B;EAAA,IAAvBC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACrC,IAAAC,SAAA,GAAqBT,QAAQ,CAAC;MAC5BC,iBAAiB,EAAjBA;IACF,CAAC,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAFKG,UAAU,GAAAF,UAAA;EAGjB,IAAI,CAACE,UAAU,EAAE;IACf,OAAO,IAAI;EACb,CAAC,MAAM;IACL,OACEP,KAAA,CAACP,IAAI;MAAAU,QAAA,GACHH,KAAA,CAACP,IAAI;QAACe,KAAK,EAAEC,MAAM,CAACC,SAAU;QAAAP,QAAA,GAC5BL,IAAA,CAACJ,KAAK;UAACiB,MAAM,EAAEC,OAAO,mCAAmC;QAAE,CAAE,CAAC,EAC9Dd,IAAA,CAACR,KAAK;UAACuB,OAAO,EAAC,OAAO;UAACC,KAAK,EAAC;QAAO,CAAE,CAAC;MAAA,CACnC,CAAC,EACPd,KAAA,CAACP,IAAI;QAACe,KAAK,EAAEC,MAAM,CAACM,SAAU;QAAAZ,QAAA,GAC5BL,IAAA,CAACP,IAAI;UAACiB,KAAK,EAAEC,MAAM,CAACO,aAAc;UAAAb,QAAA,EAAC;QAAyB,CAAM,CAAC,EACnEL,IAAA,CAACR,KAAK;UAACuB,OAAO,EAAC,OAAO;UAACC,KAAK,EAAC;QAAO,CAAE,CAAC,EACvChB,IAAA,CAACR,KAAK;UAACuB,OAAO,EAAC,OAAO;UAACC,KAAK,EAAC;QAAO,CAAE,CAAC,EACvChB,IAAA,CAACR,KAAK;UAACuB,OAAO,EAAC,OAAO;UAACC,KAAK,EAAC;QAAO,CAAE,CAAC,EACvChB,IAAA,CAACR,KAAK;UAACuB,OAAO,EAAC,OAAO;UAACC,KAAK,EAAC;QAAO,CAAE,CAAC,EACvChB,IAAA,CAACR,KAAK;UAACuB,OAAO,EAAC,OAAO;UAACC,KAAK,EAAC;QAAO,CAAE,CAAC;MAAA,CACnC,CAAC;IAAA,CACH,CAAC;EAEX;AACF;AAEA,IAAML,MAAM,GAAGjB,UAAU,CAACyB,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,iBAAiB,EAAE,MAAM;IACzBC,iBAAiB,EAAE,CAAC;IACpBC,OAAO,EAAE;EACX,CAAC;EACDL,SAAS,EAAE;IACTK,OAAO,EAAE,EAAE;IACXC,cAAc,EAAE,cAAc;IAC9BC,UAAU,EAAE,QAAQ;IACpBC,MAAM,EAAE;EACV,CAAC;EACDP,aAAa,EAAE;IACbF,KAAK,EAAE,MAAM;IACbU,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}