{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useFonts, Oswald_400Regular } from '@expo-google-fonts/oswald';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Token(props) {\n  var _useFonts = useFonts({\n      Oswald_400Regular: Oswald_400Regular\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontLoaded = _useFonts2[0];\n  var _useState = useState([['202205P04', '02/05/2023'], ['202205P02', '02/05/2023'], ['202205P02', '02/05/2023']]),\n    _useState2 = _slicedToArray(_useState, 2),\n    listToken = _useState2[0],\n    setListToken = _useState2[1];\n  if (!fontLoaded) {\n    return null;\n  } else {\n    return _jsx(View, {\n      style: styles.tokenContainer,\n      children: _jsx(Text, {\n        style: [styles.tokenText, {\n          color: props.color\n        }],\n        children: props.idToken\n      })\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  tokenContainer: {\n    backgroundColor: '#fff',\n    width: 200,\n    height: 50,\n    borderRadius: 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  tokenText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    fontFamily: 'Oswald_400Regular'\n  }\n});","map":{"version":3,"names":["useState","View","Text","StyleSheet","useFonts","Oswald_400Regular","jsx","_jsx","Token","props","_useFonts","_useFonts2","_slicedToArray","fontLoaded","_useState","_useState2","listToken","setListToken","style","styles","tokenContainer","children","tokenText","color","idToken","create","backgroundColor","width","height","borderRadius","alignItems","justifyContent","fontSize","fontWeight","fontFamily"],"sources":["D:/Github/MedToken/src/components/Token.tsx"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport { useState } from 'react'\r\nimport { View, Text, StyleSheet } from 'react-native'\r\n// eslint-disable-next-line camelcase\r\nimport { useFonts, Oswald_400Regular } from '@expo-google-fonts/oswald'\r\n\r\ninterface TokenProps {\r\n  idToken: string\r\n  color: string\r\n}\r\n\r\nexport default function Token(props: TokenProps) {\r\n  const [fontLoaded] = useFonts({\r\n    // eslint-disable-next-line camelcase\r\n    Oswald_400Regular,\r\n  })\r\n\r\n  const [listToken, setListToken] = useState([\r\n    ['202205P04', '02/05/2023'],\r\n    ['202205P02', '02/05/2023'],\r\n    ['202205P02', '02/05/2023'],\r\n  ])\r\n\r\n  if (!fontLoaded) {\r\n    return null\r\n  } else {\r\n    return (\r\n      <View style={styles.tokenContainer}>\r\n        <Text style={[styles.tokenText, { color: props.color }]}>\r\n          {props.idToken}\r\n        </Text>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  tokenContainer: {\r\n    backgroundColor: '#fff',\r\n    width: 200,\r\n    height: 50,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  tokenText: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Oswald_400Regular',\r\n  },\r\n})\r\n"],"mappings":";AACA,SAASA,QAAQ,QAAQ,OAAO;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAGhC,SAASC,QAAQ,EAAEC,iBAAiB,QAAQ,2BAA2B;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAOvE,eAAe,SAASC,KAAKA,CAACC,KAAiB,EAAE;EAC/C,IAAAC,SAAA,GAAqBN,QAAQ,CAAC;MAE5BC,iBAAiB,EAAjBA;IACF,CAAC,CAAC;IAAAM,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAHKG,UAAU,GAAAF,UAAA;EAKjB,IAAAG,SAAA,GAAkCd,QAAQ,CAAC,CACzC,CAAC,WAAW,EAAE,YAAY,CAAC,EAC3B,CAAC,WAAW,EAAE,YAAY,CAAC,EAC3B,CAAC,WAAW,EAAE,YAAY,CAAC,CAC5B,CAAC;IAAAe,UAAA,GAAAH,cAAA,CAAAE,SAAA;IAJKE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAM9B,IAAI,CAACF,UAAU,EAAE;IACf,OAAO,IAAI;EACb,CAAC,MAAM;IACL,OACEN,IAAA,CAACN,IAAI;MAACiB,KAAK,EAAEC,MAAM,CAACC,cAAe;MAAAC,QAAA,EACjCd,IAAA,CAACL,IAAI;QAACgB,KAAK,EAAE,CAACC,MAAM,CAACG,SAAS,EAAE;UAAEC,KAAK,EAAEd,KAAK,CAACc;QAAM,CAAC,CAAE;QAAAF,QAAA,EACrDZ,KAAK,CAACe;MAAO,CACV;IAAC,CACH,CAAC;EAEX;AACF;AAEA,IAAML,MAAM,GAAGhB,UAAU,CAACsB,MAAM,CAAC;EAC/BL,cAAc,EAAE;IACdM,eAAe,EAAE,MAAM;IACvBC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDT,SAAS,EAAE;IACTU,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,UAAU,EAAE;EACd;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}