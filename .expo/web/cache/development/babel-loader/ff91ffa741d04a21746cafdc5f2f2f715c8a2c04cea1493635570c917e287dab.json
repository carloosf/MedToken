{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nexport default function GetMedtoken() {\n  return _GetMedtoken.apply(this, arguments);\n}\nfunction _GetMedtoken() {\n  _GetMedtoken = _asyncToGenerator(function* () {\n    try {\n      var response = yield fetch('https://medtoken-api.onrender.com/');\n      if (response.ok) {\n        var data = yield response.json();\n        var tokens = data.tokens || [];\n        var status = response.status;\n        return [tokens, status];\n      } else {\n        console.error('Error:', response.status);\n        return [];\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      return [];\n    }\n  });\n  return _GetMedtoken.apply(this, arguments);\n}","map":{"version":3,"names":["GetMedtoken","_GetMedtoken","apply","arguments","_asyncToGenerator","response","fetch","ok","data","json","tokens","status","console","error"],"sources":["D:/Github/MedToken/src/services/GetMedtoken.ts"],"sourcesContent":["export default async function GetMedtoken() {\r\n  try {\r\n    const response = await fetch('https://medtoken-api.onrender.com/')\r\n    if (response.ok) {\r\n      const data = await response.json()\r\n      const tokens = data.tokens || []\r\n      const status = response.status\r\n      return [tokens, status]\r\n    } else {\r\n      console.error('Error:', response.status)\r\n      return []\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error)\r\n    return []\r\n  }\r\n}\r\n"],"mappings":";AAAA,wBAA8BA,WAAWA,CAAA;EAAA,OAAAC,YAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAgBxC,SAAAF,aAAA;EAAAA,YAAA,GAAAG,iBAAA,CAhBc,aAA6B;IAC1C,IAAI;MACF,IAAMC,QAAQ,SAASC,KAAK,CAAC,oCAAoC,CAAC;MAClE,IAAID,QAAQ,CAACE,EAAE,EAAE;QACf,IAAMC,IAAI,SAASH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClC,IAAMC,MAAM,GAAGF,IAAI,CAACE,MAAM,IAAI,EAAE;QAChC,IAAMC,MAAM,GAAGN,QAAQ,CAACM,MAAM;QAC9B,OAAO,CAACD,MAAM,EAAEC,MAAM,CAAC;MACzB,CAAC,MAAM;QACLC,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAER,QAAQ,CAACM,MAAM,CAAC;QACxC,OAAO,EAAE;MACX;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9B,OAAO,EAAE;IACX;EACF,CAAC;EAAA,OAAAZ,YAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}